[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "svk-heatpump"
version = "0.1.1"
description = "Home Assistant custom component for SVK LMC320 heat pump controllers"
readme = "Readme.rst"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "SVK Heatpump Contributors"}
]
keywords = ["home-assistant", "svk", "heatpump", "lmc320", "lom320"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
]

dependencies = [
    "aiohttp>=3.8.0",
    "beautifulsoup4>=4.9.0",
    "lxml>=4.6.0",
    "voluptuous>=0.13.0",
    "yarl>=1.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-homeassistant-custom-component>=0.13.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
"Homepage" = "https://github.com/janusr/HA-SVKHeat"
"Bug Reports" = "https://github.com/janusr/HA-SVKHeat/issues"
"Source" = "https://github.com/janusr/HA-SVKHeat"
"Documentation" = "https://github.com/janusr/HA-SVKHeat#readme"

[tool.setuptools.packages.find]
where = ["custom_components"]
include = ["svk_heatpump*"]


[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config -p no:socket"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["custom_components/svk_heatpump"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.pylint.messages_control]
disable = [
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-locals",
]

[tool.pylint.format]
max-line-length = 88