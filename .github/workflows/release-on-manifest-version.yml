# .github/workflows/release-on-manifest-version.yml
name: Release on manifest version bump

on:
  push:
    branches: [ main ]
    paths:
      - 'custom_components/svk_heatpump/manifest.json'

permissions:
  contents: write

jobs:
  release_if_version_changed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version from manifest.json
        id: manifest
        run: |
          ver=$(jq -r '.version' custom_components/svk_heatpump/manifest.json)
          if [ -z "$ver" ] || [ "$ver" = "null" ]; then
            echo "Manifest version missing"; exit 1
          fi
          echo "version=$ver" >> $GITHUB_OUTPUT

      - name: Get latest tag (strip leading v)
        id: latest
        run: |
          git fetch --tags
          latest=$(git tag --list 'v*' --sort=-v:refname | head -n 1)
          echo "version=${latest#v}" >> $GITHUB_OUTPUT

      - name: Skip if same version
        id: should
        run: |
          if [ "${{ steps.manifest.outputs.version }}" = "${{ steps.latest.outputs.version }}" ]; then
            echo "release=false" >> $GITHUB_OUTPUT
          else
            echo "release=true" >> $GITHUB_OUTPUT
          fi
          
      - name: Configure git identity
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create tag
        if: steps.should.outputs.release == 'true'
        run: |
          git tag "v${{ steps.manifest.outputs.version }}" -m "Release v${{ steps.manifest.outputs.version }}"
          git push origin "v${{ steps.manifest.outputs.version }}"

      - name: Generate changelog
        if: steps.should.outputs.release == 'true'
        id: changelog
        run: |
          # Get the previous tag (if exists)
          PREV_TAG=$(git tag --list 'v*' --sort=-v:refname | head -n 2 | tail -n 1)
          
          # Generate changelog
          if [ -z "$PREV_TAG" ]; then
            # First release - get all commits
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # Get commits between previous tag and current
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges $PREV_TAG..HEAD)
          fi
          
          # If no commits found, use a default message
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="- No changes since last release"
          fi
          
          # Save to file and output
          echo "$CHANGELOG" > changelog.txt
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.should.outputs.release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.manifest.outputs.version }}
          body: |
            ## Changes since last release
            
            ${{ steps.changelog.outputs.changelog }}
            
            ---
            
            *Release automatically created on version bump*
          generate_release_notes: false
