"""Auto-generated catalog of SVK Heatpump entities.
This file is generated by parse_datasets.py - do not edit manually.
"""

from typing import Any

# Entity definitions
ENTITIES = {
    "defrost_defrost_mode": {
        "name": "Defrost.Mode",
        "platform": "select",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "defrost_defrost_tfrosting": {
        "name": "Defrost.TFrosting",
        "platform": "sensor",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "defrost_defrost_trelfrost": {
        "name": "Defrost.TRelFrost",
        "platform": "sensor",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "defrost_defrost_relfrostcmp": {
        "name": "Defrost.RelFrostCmp",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "number",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_defrtimein": {
        "name": "Defrost.DefrTimeIn",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "time",
        "unit": "min",
        "min_value": 0,
        "max_value": 60,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_mininterval": {
        "name": "Defrost.MinInterval",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "time",
        "unit": "min",
        "min_value": 0,
        "max_value": 240,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_stoptemp": {
        "name": "Defrost.StopTemp",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 20,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_maxtime": {
        "name": "Defrost.MaxTime",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "time",
        "unit": "min",
        "min_value": 0,
        "max_value": 10,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_defrostcap": {
        "name": "Defrost.DefrostCap",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "percentage",
        "unit": "%",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_ticemelt": {
        "name": "Defrost.TIceMelt",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -5,
        "max_value": 5,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_tmeltfast": {
        "name": "Defrost.TMeltFast",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 15,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_fftambmin": {
        "name": "Defrost.FFTambMin",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 0,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_fftambmax": {
        "name": "Defrost.FFTambMax",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 20,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_fftevapstop": {
        "name": "Defrost.FFTevapStop",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -5,
        "max_value": 10,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_tairdfrtemp": {
        "name": "Defrost.TAirDfrTemp",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 50,
        "step": 1,
        "access_type": "readwrite",
    },
    "defrost_defrost_dripdowndel1": {
        "name": "Defrost.DripDownDel1",
        "platform": "number",
        "category": "Settings",
        "group": "Defrost",
        "page": "settings_defrost",
        "data_type": "time",
        "unit": "s",
        "min_value": 0,
        "max_value": 60,
        "step": 1,
        "access_type": "readwrite",
    },
    "display_heatpump_state": {
        "name": "HeatPump.State",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_input_theatsupply": {
        "name": "Input.THeatSupply",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_theatreturn": {
        "name": "Input.THeatReturn",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_twatertank": {
        "name": "Input.TWaterTank",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_tamb": {
        "name": "Input.Tamb",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_troom": {
        "name": "Input.Troom",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_theattank": {
        "name": "Input.THeatTank",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_tcoldsupply": {
        "name": "Input.TColdSupply",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_tcoldreturn": {
        "name": "Input.TColdReturn",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_tevap": {
        "name": "Input.Tevap",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_heating_setpointact": {
        "name": "Heating.SetPointAct",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_hotwater_setpointact": {
        "name": "HotWater.SetPointAct",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_solarpanel_state": {
        "name": "SolarPanel.State",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_input_tsolarpanel": {
        "name": "Input.TSolarPanel",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_input_tsolarwater": {
        "name": "Input.TSolarWater",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "display_heatpump_seasonstate": {
        "name": "HeatPump.SeasonState",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_coldpump_state": {
        "name": "ColdPump.State",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_legionella_state": {
        "name": "Legionella.State",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_heatpump_capacityreq": {
        "name": "HeatPump.CapacityReq",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "percentage",
        "unit": "%",
        "access_type": "read",
    },
    "display_compressor_output": {
        "name": "Compressor.Output",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_heatpump_capacityact": {
        "name": "HeatPump.CapacityAct",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "percentage",
        "unit": "%",
        "access_type": "read",
    },
    "display_hotwater_source": {
        "name": "HotWater.Source",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "number",
        "access_type": "read",
    },
    "display_heating_source": {
        "name": "Heating.Source",
        "platform": "sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "number",
        "access_type": "read",
    },
    "display_output_heater": {
        "name": "Output.Heater",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_hottapwater": {
        "name": "Output.HotTapWater",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_coldpump": {
        "name": "Output.ColdPump",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_coldpumplow": {
        "name": "Output.ColdPumpLow",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_hotsidepump": {
        "name": "Output.HotSidePump",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_defrostvalve": {
        "name": "Output.DefrostValve",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_solarpump": {
        "name": "Output.SolarPump",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_auxpump": {
        "name": "Output.AuxPump",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "display_output_alarm": {
        "name": "Output.Alarm",
        "platform": "binary_sensor",
        "category": "Operation",
        "group": "Display",
        "page": "display",
        "data_type": "boolean",
        "access_type": "read",
    },
    "heating_heating_source": {
        "name": "Heating.Source",
        "platform": "select",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "heating_heating_setpointmin": {
        "name": "Heating.SetPointMin",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 10,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heating_setpointmax": {
        "name": "Heating.SetPointMax",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 20,
        "max_value": 60,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heating_setpmincool": {
        "name": "Heating.SetPMinCool",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 5,
        "max_value": 25,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heating_setpointact": {
        "name": "Heating.SetPointAct",
        "platform": "sensor",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
    "heating_heating_neutralzone": {
        "name": "Heating.NeutralZone",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 5,
        "step": 0.1,
        "access_type": "readwrite",
    },
    "heating_heating_stopcap1": {
        "name": "Heating.StopCap1",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "percentage",
        "unit": "%",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heating_stopcap2": {
        "name": "Heating.StopCap2",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "percentage",
        "unit": "%",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heating_startdifcap": {
        "name": "Heating.StartDifCap",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "percentage",
        "unit": "%",
        "min_value": 0,
        "max_value": 50,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_compressor_minvoltage": {
        "name": "Compressor.MinVoltage",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "voltage",
        "unit": "V",
        "min_value": 180,
        "max_value": 250,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_compressor_maxvoltage": {
        "name": "Compressor.MaxVoltage",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "voltage",
        "unit": "V",
        "min_value": 200,
        "max_value": 280,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_compressor_ustart": {
        "name": "Compressor.UStart",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "voltage",
        "unit": "V",
        "min_value": 180,
        "max_value": 250,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_compressor_gain": {
        "name": "Compressor.Gain",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "number",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_compressor_tn": {
        "name": "Compressor.Tn",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "time",
        "unit": "s",
        "min_value": 0,
        "max_value": 1000,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heating_tevapmin": {
        "name": "Heating.TEvapMin",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 0,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heating_minheattime": {
        "name": "Heating.MinHeatTime",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "time",
        "unit": "min",
        "min_value": 0,
        "max_value": 60,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_type": {
        "name": "HeatSPCtrl.Type",
        "platform": "select",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curve": {
        "name": "HeatSPCtrl.Curve",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "number",
        "min_value": 0,
        "max_value": 10,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curpnt1": {
        "name": "HeatSPCtrl.CurPnt1",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curpnt2": {
        "name": "HeatSPCtrl.CurPnt2",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curpnt3": {
        "name": "HeatSPCtrl.CurPnt3",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curpnt4": {
        "name": "HeatSPCtrl.CurPnt4",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curpnt5": {
        "name": "HeatSPCtrl.CurPnt5",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curpnt6": {
        "name": "HeatSPCtrl.CurPnt6",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_curpnt7": {
        "name": "HeatSPCtrl.CurPnt7",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_ambcmpmax": {
        "name": "HeatSPCtrl.AmbCmpMax",
        "platform": "number",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 40,
        "step": 1,
        "access_type": "readwrite",
    },
    "heating_heatspctrl_toffset": {
        "name": "HeatSPCtrl.ToffSet",
        "platform": "switch",
        "category": "Settings",
        "group": "Heating",
        "page": "settings_heating",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "heatpump_parameters_hpstops": {
        "name": "Parameters.HPStopS",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "time",
        "unit": "s",
        "min_value": 0,
        "max_value": 300,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_parameters_totalstops": {
        "name": "Parameters.TotalStopS",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "time",
        "unit": "s",
        "min_value": 0,
        "max_value": 600,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_parameters_hpstopt": {
        "name": "Parameters.HPStopT",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 50,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_parameters_totalstopt": {
        "name": "Parameters.TotalStopT",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 50,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_parameters_hpambstopt": {
        "name": "Parameters.HPAmbStopT",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": -20,
        "max_value": 50,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_heating_ctrlmode": {
        "name": "Heating.CtrlMode",
        "platform": "select",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "heatpump_cprcontrol_cprmode": {
        "name": "CprControl.CprMode",
        "platform": "select",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "heatpump_compressor_mincprstop": {
        "name": "Compressor.MinCprStop",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "time",
        "unit": "s",
        "min_value": 0,
        "max_value": 300,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_heating_elecdelay": {
        "name": "Heating.ElecDelay",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "time",
        "unit": "min",
        "min_value": 0,
        "max_value": 60,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_parameters_pumpexinter": {
        "name": "Parameters.PumpExInter",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "time",
        "unit": "s",
        "min_value": 0,
        "max_value": 300,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_parameters_startuptime": {
        "name": "Parameters.StartUpTime",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "time",
        "unit": "min",
        "min_value": 0,
        "max_value": 60,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_coldpump_stopdelay": {
        "name": "ColdPump.StopDelay",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "time",
        "unit": "s",
        "min_value": 0,
        "max_value": 300,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_coldpump_mode": {
        "name": "ColdPump.Mode",
        "platform": "select",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "heatpump_coldpump_hspeedcap": {
        "name": "ColdPump.HSpeedCap",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "percentage",
        "unit": "%",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_coldpump_hspeednz": {
        "name": "ColdPump.HSpeedNZ",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "percentage",
        "unit": "%",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "heatpump_coldpump_hspeedvolt": {
        "name": "ColdPump.HSpeedVolt",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "voltage",
        "unit": "V",
        "min_value": 0,
        "max_value": 10,
        "step": 0.1,
        "access_type": "readwrite",
    },
    "heatpump_coldpump_lspeedvolt": {
        "name": "ColdPump.LSpeedVolt",
        "platform": "number",
        "category": "Settings",
        "group": "Heatpump",
        "page": "settings_heatpump",
        "data_type": "voltage",
        "unit": "V",
        "min_value": 0,
        "max_value": 10,
        "step": 0.1,
        "access_type": "readwrite",
    },
    "hotwater_hotwater_source": {
        "name": "HotWater.Source",
        "platform": "select",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "hotwater_hotwater_setpoint": {
        "name": "HotWater.SetPoint",
        "platform": "number",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 40,
        "max_value": 65,
        "step": 1,
        "access_type": "readwrite",
    },
    "hotwater_hotwater_neutralzone": {
        "name": "HotWater.NeutralZone",
        "platform": "switch",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "hotwater_hotwater_capacity": {
        "name": "HotWater.Capacity",
        "platform": "number",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "percentage",
        "unit": "%",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "hotwater_hotwater_teleclimit": {
        "name": "HotWater.TElecLimit",
        "platform": "number",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 100,
        "step": 1,
        "access_type": "readwrite",
    },
    "hotwater_legionella_waittime": {
        "name": "Legionella.WaitTime",
        "platform": "number",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "time",
        "unit": "days",
        "min_value": 1,
        "max_value": 30,
        "step": 1,
        "access_type": "readwrite",
    },
    "hotwater_legionella_treattemp": {
        "name": "Legionella.TreatTemp",
        "platform": "number",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 60,
        "max_value": 75,
        "step": 1,
        "access_type": "readwrite",
    },
    "hotwater_legionella_timeout1": {
        "name": "Legionella.Timeout1",
        "platform": "number",
        "category": "Settings",
        "group": "Hot water",
        "page": "settings_hotwater",
        "data_type": "time",
        "unit": "h",
        "min_value": 1,
        "max_value": 24,
        "step": 1,
        "access_type": "readwrite",
    },
    "service_info_appversion": {
        "name": "Info.AppVersion",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "string",
        "access_type": "read",
    },
    "service_misc_lup200swver": {
        "name": "Misc.LUP200SWVer",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "string",
        "access_type": "read",
    },
    "service_com_ipadr": {
        "name": "Com.IpAdr",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "string",
        "access_type": "read",
    },
    "service_com_macadr": {
        "name": "Com.MacAdr",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "string",
        "access_type": "read",
    },
    "service_parameters_displaymode": {
        "name": "Parameters.DisplayMode",
        "platform": "select",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "service_parameters_mainswitch": {
        "name": "Parameters.MainSwitch",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_compressor1": {
        "name": "Manual.Compressor1",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_re6": {
        "name": "Manual.RE6",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_heater": {
        "name": "Manual.Heater",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_hottapwater": {
        "name": "Manual.HotTapWater",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_coldpump": {
        "name": "Manual.ColdPump",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_coldpumplow": {
        "name": "Manual.ColdPumpLow",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_hotsidepump": {
        "name": "Manual.HotSidePump",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_defrostvalve": {
        "name": "Manual.DefrostValve",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_solarpump": {
        "name": "Manual.SolarPump",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_auxpump": {
        "name": "Manual.AuxPump",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_manual_alarm": {
        "name": "Manual.Alarm",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "service_heatpump_runtime": {
        "name": "HeatPump.RunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_compressor_compruntime": {
        "name": "Compressor.CompRunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_heating_elecruntime": {
        "name": "Heating.ElecRunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_hotwater_runtime": {
        "name": "HotWater.RunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_coldpump_cpruntime": {
        "name": "ColdPump.CPRunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_heatpump_hspruntime": {
        "name": "HeatPump.HSPRunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_solarpanel_runtime": {
        "name": "SolarPanel.RunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_heatpump_apruntime": {
        "name": "HeatPump.APRunTime",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "time",
        "unit": "h",
        "access_type": "read",
    },
    "service_defrost_defrhgcount": {
        "name": "Defrost.DefrHGCount",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "number",
        "access_type": "read",
    },
    "service_defrost_defraircnt": {
        "name": "Defrost.DefrAirCnt",
        "platform": "sensor",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "number",
        "access_type": "read",
    },
    "service_concrete_mode": {
        "name": "Concrete.Mode",
        "platform": "switch",
        "category": "Settings",
        "group": "Service",
        "page": "settings_service",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "solar_solarpanel_state": {
        "name": "SolarPanel.State",
        "platform": "binary_sensor",
        "category": "Settings",
        "group": "Solar panel",
        "page": "settings_solar",
        "data_type": "boolean",
        "access_type": "read",
    },
    "solar_solarpanel_sensorselect": {
        "name": "SolarPanel.SensorSelect",
        "platform": "select",
        "category": "Settings",
        "group": "Solar panel",
        "page": "settings_solar",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "solar_solarpanel_tstartdiff": {
        "name": "SolarPanel.TStartDiff",
        "platform": "number",
        "category": "Settings",
        "group": "Solar panel",
        "page": "settings_solar",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 20,
        "step": 1,
        "access_type": "readwrite",
    },
    "solar_solarpanel_tstopdiff": {
        "name": "SolarPanel.TStopDiff",
        "platform": "number",
        "category": "Settings",
        "group": "Solar panel",
        "page": "settings_solar",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 0,
        "max_value": 20,
        "step": 1,
        "access_type": "readwrite",
    },
    "solar_solarpanel_tempmax": {
        "name": "SolarPanel.TempMax",
        "platform": "number",
        "category": "Settings",
        "group": "Solar panel",
        "page": "settings_solar",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 40,
        "max_value": 80,
        "step": 1,
        "access_type": "readwrite",
    },
    "solar_solarpanel_watermt": {
        "name": "SolarPanel.WaterMT",
        "platform": "number",
        "category": "Settings",
        "group": "Solar panel",
        "page": "settings_solar",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 20,
        "max_value": 80,
        "step": 1,
        "access_type": "readwrite",
    },
    "solar_solarpanel_starttemp": {
        "name": "SolarPanel.StartTemp",
        "platform": "number",
        "category": "Settings",
        "group": "Solar panel",
        "page": "settings_solar",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 10,
        "max_value": 50,
        "step": 1,
        "access_type": "readwrite",
    },
    "user_user_language": {
        "name": "User.Language",
        "platform": "select",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "enum",
        "access_type": "readwrite",
    },
    "user_heatspctrl_troomset": {
        "name": "HeatSPCtrl.TroomSet",
        "platform": "number",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 10,
        "max_value": 30,
        "step": 0.5,
        "access_type": "readwrite",
    },
    "user_hotwater_setpoint": {
        "name": "HotWater.SetPoint",
        "platform": "number",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "temperature",
        "unit": "°C",
        "min_value": 40,
        "max_value": 65,
        "step": 1,
        "access_type": "readwrite",
    },
    "user_heatspctrl_toffset": {
        "name": "HeatSPCtrl.ToffSet",
        "platform": "switch",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "user_parameters_seasonmode": {
        "name": "Parameters.SeasonMode",
        "platform": "switch",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "boolean",
        "access_type": "readwrite",
    },
    "user_time_year": {
        "name": "Time.Year",
        "platform": "sensor",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "number",
        "access_type": "read",
    },
    "user_time_month": {
        "name": "Time.Month",
        "platform": "sensor",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "number",
        "access_type": "read",
    },
    "user_time_day": {
        "name": "Time.Day",
        "platform": "sensor",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "number",
        "access_type": "read",
    },
    "user_time_hour": {
        "name": "Time.Hour",
        "platform": "sensor",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "number",
        "access_type": "read",
    },
    "user_time_minute": {
        "name": "Time.Minute",
        "platform": "sensor",
        "category": "Operation",
        "group": "User",
        "page": "user",
        "data_type": "number",
        "access_type": "read",
    },
    "system_firmwareupgrade_lom320": {
        "name": "LOM320",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "firmwareupgrade",
        "data_type": "string",
        "access_type": "read",
    },
    "system_firmwareupgrade_userinterface": {
        "name": "UserInterface",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "firmwareupgrade",
        "data_type": "string",
        "access_type": "read",
    },
    "system_firmwareupgrade_lmc300": {
        "name": "LMC300",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "firmwareupgrade",
        "data_type": "string",
        "access_type": "read",
    },
    "system_firmwareupgrade_project_name": {
        "name": "Project name",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "firmwareupgrade",
        "data_type": "string",
        "access_type": "read",
    },
    "system_firmwareupgrade_lup200": {
        "name": "LUP200",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "firmwareupgrade",
        "data_type": "string",
        "access_type": "read",
    },
    "system_firmwareupgrade_datafile": {
        "name": "Datafile",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "firmwareupgrade",
        "data_type": "string",
        "access_type": "write",
    },
    "system_groups_name": {
        "name": "Name",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "groups",
        "data_type": "string",
        "access_type": "read",
    },
    "system_groups_admin": {
        "name": "admin",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "groups",
        "data_type": "string",
        "access_type": "read",
    },
    "system_groups_ha_user": {
        "name": "ha-user",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "groups",
        "data_type": "string",
        "access_type": "read",
    },
    "system_systemview": {
        "name": "System View",
        "platform": "sensor",
        "category": "Configuration",
        "group": "System",
        "page": "systemview",
        "data_type": "temperature",
        "unit": "°C",
        "access_type": "read",
    },
}

# Platform-specific entity lists
SENSOR_ENTITIES = [
    "defrost_defrost_tfrosting",
    "defrost_defrost_trelfrost",
    "display_input_theatsupply",
    "display_input_theatreturn",
    "display_input_twatertank",
    "display_input_tamb",
    "display_input_troom",
    "display_input_theattank",
    "display_input_tcoldsupply",
    "display_input_tcoldreturn",
    "display_input_tevap",
    "display_input_tsolarpanel",
    "display_input_tsolarwater",
    "display_heating_setpointact",
    "display_hotwater_setpointact",
    "display_heatpump_capacityreq",
    "display_heatpump_capacityact",
    "display_hotwater_source",
    "display_heating_source",
    "heating_heating_setpointact",
    "service_info_appversion",
    "service_misc_lup200swver",
    "service_com_ipadr",
    "service_com_macadr",
    "service_heatpump_runtime",
    "service_compressor_compruntime",
    "service_heating_elecruntime",
    "service_hotwater_runtime",
    "service_coldpump_cpruntime",
    "service_heatpump_hspruntime",
    "service_solarpanel_runtime",
    "service_heatpump_apruntime",
    "service_defrost_defrhgcount",
    "service_defrost_defraircnt",
    "user_time_year",
    "user_time_month",
    "user_time_day",
    "user_time_hour",
    "user_time_minute",
    "system_firmwareupgrade_lom320",
    "system_firmwareupgrade_userinterface",
    "system_firmwareupgrade_lmc300",
    "system_firmwareupgrade_project_name",
    "system_firmwareupgrade_lup200",
    "system_firmwareupgrade_datafile",
    "system_groups_name",
    "system_groups_admin",
    "system_groups_ha_user",
    "system_systemview",
]

BINARY_SENSOR_ENTITIES = [
    "display_heatpump_state",
    "display_solarpanel_state",
    "display_heatpump_seasonstate",
    "display_coldpump_state",
    "display_legionella_state",
    "display_compressor_output",
    "display_output_heater",
    "display_output_hottapwater",
    "display_output_coldpump",
    "display_output_coldpumplow",
    "display_output_hotsidepump",
    "display_output_defrostvalve",
    "display_output_solarpump",
    "display_output_auxpump",
    "display_output_alarm",
    "solar_solarpanel_state",
]

NUMBER_ENTITIES = [
    "defrost_defrost_relfrostcmp",
    "defrost_defrost_defrtimein",
    "defrost_defrost_mininterval",
    "defrost_defrost_stoptemp",
    "defrost_defrost_maxtime",
    "defrost_defrost_defrostcap",
    "defrost_defrost_ticemelt",
    "defrost_defrost_tmeltfast",
    "defrost_defrost_fftambmin",
    "defrost_defrost_fftambmax",
    "defrost_defrost_fftevapstop",
    "defrost_defrost_tairdfrtemp",
    "defrost_defrost_dripdowndel1",
    "heating_heating_setpointmin",
    "heating_heating_setpointmax",
    "heating_heating_setpmincool",
    "heating_heating_neutralzone",
    "heating_heating_stopcap1",
    "heating_heating_stopcap2",
    "heating_heating_startdifcap",
    "heating_compressor_minvoltage",
    "heating_compressor_maxvoltage",
    "heating_compressor_ustart",
    "heating_compressor_gain",
    "heating_compressor_tn",
    "heating_heating_tevapmin",
    "heating_heating_minheattime",
    "heating_heatspctrl_curve",
    "heating_heatspctrl_curpnt1",
    "heating_heatspctrl_curpnt2",
    "heating_heatspctrl_curpnt3",
    "heating_heatspctrl_curpnt4",
    "heating_heatspctrl_curpnt5",
    "heating_heatspctrl_curpnt6",
    "heating_heatspctrl_curpnt7",
    "heating_heatspctrl_ambcmpmax",
    "heatpump_parameters_hpstops",
    "heatpump_parameters_totalstops",
    "heatpump_parameters_hpstopt",
    "heatpump_parameters_totalstopt",
    "heatpump_parameters_hpambstopt",
    "heatpump_compressor_mincprstop",
    "heatpump_heating_elecdelay",
    "heatpump_parameters_pumpexinter",
    "heatpump_parameters_startuptime",
    "heatpump_coldpump_stopdelay",
    "heatpump_coldpump_hspeedcap",
    "heatpump_coldpump_hspeednz",
    "heatpump_coldpump_hspeedvolt",
    "heatpump_coldpump_lspeedvolt",
    "hotwater_hotwater_setpoint",
    "hotwater_hotwater_capacity",
    "hotwater_hotwater_teleclimit",
    "hotwater_legionella_waittime",
    "hotwater_legionella_treattemp",
    "hotwater_legionella_timeout1",
    "solar_solarpanel_tstartdiff",
    "solar_solarpanel_tstopdiff",
    "solar_solarpanel_tempmax",
    "solar_solarpanel_watermt",
    "solar_solarpanel_starttemp",
    "user_heatspctrl_troomset",
    "user_hotwater_setpoint",
]

SELECT_ENTITIES = [
    "defrost_defrost_mode",
    "heating_heating_source",
    "heating_heatspctrl_type",
    "heatpump_heating_ctrlmode",
    "heatpump_cprcontrol_cprmode",
    "heatpump_coldpump_mode",
    "hotwater_hotwater_source",
    "service_parameters_displaymode",
    "solar_solarpanel_sensorselect",
    "user_user_language",
]

SWITCH_ENTITIES = [
    "heating_heatspctrl_toffset",
    "hotwater_hotwater_neutralzone",
    "service_parameters_mainswitch",
    "service_manual_compressor1",
    "service_manual_re6",
    "service_manual_heater",
    "service_manual_hottapwater",
    "service_manual_coldpump",
    "service_manual_coldpumplow",
    "service_manual_hotsidepump",
    "service_manual_defrostvalve",
    "service_manual_solarpump",
    "service_manual_auxpump",
    "service_manual_alarm",
    "service_concrete_mode",
    "user_heatspctrl_toffset",
    "user_parameters_seasonmode",
]

# Moved from const.py - Temperature sensor definitions
TEMP_SENSORS = {
    "heating_supply_temp": {
        "name": "Heating Supply Temp",
        "label": "Heating supply",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "heating_return_temp": {
        "name": "Heating Return Temp",
        "label": "Heating return",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "water_tank_temp": {
        "name": "Water Tank Temp",
        "label": "Water tank",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "ambient_temp": {
        "name": "Ambient Temp",
        "label": "Ambient",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "room_temp": {
        "name": "Room Temp",
        "label": "Room",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "heating_tank_temp": {
        "name": "Heating Tank Temp",
        "label": "Heating tank",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "cold_side_supply_temp": {
        "name": "Cold Side Supply Temp",
        "label": "Cold side supply",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "cold_side_return_temp": {
        "name": "Cold Side Return Temp",
        "label": "Cold side return",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "evaporator_temp": {
        "name": "Evaporator Temp",
        "label": "Evaporator",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "solar_collector_temp": {
        "name": "Solar Collector Temp",
        "label": "Solar collector",
        "page": "solar",
        "category": "Settings",
        "group": "Solar panel",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "solar_water_temp": {
        "name": "Solar Water Temp",
        "label": "Solar water",
        "page": "solar",
        "category": "Settings",
        "group": "Solar panel",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
}

# Moved from const.py - Setpoint sensor definitions
SETPOINT_SENSORS = {
    "heating_setpoint": {
        "name": "Heating Set Point",
        "label": "Heating set point",
        "page": "user",
        "category": "Operation",
        "group": "User",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
    "hot_water_setpoint": {
        "name": "Hot Water Set Point",
        "label": "Hot water set point",
        "page": "user",
        "category": "Operation",
        "group": "User",
        "device_class": "temperature",
        "unit": "°C",
        "state_class": "measurement",
    },
}

# Moved from const.py - Performance sensor definitions
PERFORMANCE_SENSORS = {
    "compressor_speed_v": {
        "name": "Compressor Speed",
        "label": "Compressor speed",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "V",
        "state_class": "measurement",
    },
    "compressor_speed_percent": {
        "name": "Compressor Speed",
        "label": "Compressor speed %",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "%",
        "state_class": "measurement",
    },
    "cold_pump_speed": {
        "name": "Cold Pump Speed",
        "label": "Cold pump speed",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "V",
        "state_class": "measurement",
    },
    "requested_capacity": {
        "name": "Requested Heating Capacity",
        "label": "Requested capacity",
        "page": "heating",
        "category": "Settings",
        "group": "Heating",
        "unit": "%",
        "state_class": "measurement",
    },
    "actual_capacity": {
        "name": "Actual Capacity",
        "label": "Actual capacity",
        "page": "heating",
        "category": "Settings",
        "group": "Heating",
        "unit": "%",
        "state_class": "measurement",
    },
}

# Moved from const.py - Counter sensor definitions (diagnostic)
COUNTER_SENSORS = {
    "compressor_runtime": {
        "name": "Compressor Runtime",
        "label": "Compressor runtime",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "heater_runtime": {
        "name": "Heater Runtime",
        "label": "Heater runtime",
        "page": "heating",
        "category": "Settings",
        "group": "Heating",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "pump_runtime": {
        "name": "Pump Runtime",
        "label": "Pump runtime",
        "page": "heating",
        "category": "Settings",
        "group": "Heating",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "heatpump_runtime": {
        "name": "Heat Pump Runtime",
        "label": "Heat pump runtime",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "hot_water_runtime": {
        "name": "Hot Water Runtime",
        "label": "Hot water runtime",
        "page": "hotwater",
        "category": "Settings",
        "group": "Hot water",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "cold_pump_runtime": {
        "name": "Cold Pump Runtime",
        "label": "Cold pump runtime",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "heatpump_ap_runtime": {
        "name": "Heat Pump AP Runtime",
        "label": "Heat pump AP runtime",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "heatpump_hsp_runtime": {
        "name": "Heat Pump HSP Runtime",
        "label": "Heat pump HSP runtime",
        "page": "heatpump",
        "category": "Settings",
        "group": "Heatpump",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "heating_electric_runtime": {
        "name": "Heating Electric Runtime",
        "label": "Heating electric runtime",
        "page": "heating",
        "category": "Settings",
        "group": "Heating",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "solar_panel_runtime": {
        "name": "Solar Panel Runtime",
        "label": "Solar panel runtime",
        "page": "solar",
        "category": "Settings",
        "group": "Solar panel",
        "unit": "h",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
}

# Moved from const.py - System information sensors (diagnostic)
SYSTEM_SENSORS = {
    "ip_address": {
        "name": "IP Address",
        "label": "IP address",
        "page": "display",
        "category": "Configuration",
        "group": "System",
        "entity_category": "diagnostic",
    },
    "mac_address": {
        "name": "MAC Address",
        "label": "MAC address",
        "page": "display",
        "category": "Configuration",
        "group": "System",
        "entity_category": "diagnostic",
    },
    "app_version": {
        "name": "App Version",
        "label": "App version",
        "page": "display",
        "category": "Configuration",
        "group": "System",
        "entity_category": "diagnostic",
    },
    "lup200_software_version": {
        "name": "LUP200 Software Version",
        "label": "LUP200 software version",
        "page": "display",
        "category": "Configuration",
        "group": "System",
        "entity_category": "diagnostic",
    },
    "software_version": {
        "name": "Software Version",
        "label": "Software version",
        "page": "display",
        "category": "Configuration",
        "group": "System",
        "entity_category": "diagnostic",
    },
    "log_interval": {
        "name": "Log Interval",
        "label": "Log interval",
        "page": "display",
        "category": "Configuration",
        "group": "System",
        "entity_category": "diagnostic",
    },
}

# Moved from const.py - System counter sensors (diagnostic)
SYSTEM_COUNTER_SENSORS = {
    "defrost_hot_gas_count": {
        "name": "Defrost Hot Gas Count",
        "label": "Defrost hot gas count",
        "page": "settings_service",
        "category": "Settings",
        "group": "Service",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
    "defrost_air_count": {
        "name": "Defrost Air Count",
        "label": "Defrost air count",
        "page": "settings_service",
        "category": "Settings",
        "group": "Service",
        "entity_category": "diagnostic",
        "state_class": "total_increasing",
    },
}

# Moved from const.py - Binary sensor definitions
BINARY_SENSORS = {
    "alarm_active": {
        "name": "Alarm Active",
        "label": "Alarm active",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "device_class": "problem",
    }
}

# Moved from const.py - Select entity definitions
SELECT_ENTITIES_LEGACY = {
    "heatpump_state": {
        "name": "Heat Pump State",
        "label": "Heat pump state",
        "page": "display",
        "category": "Operation",
        "group": "Display",
        "options": ["Off", "Ready", "Start up", "Heating", "Hot water", "El heating", "Defrost", "Drip delay", "Total stop", "Pump exercise", "Forced running", "Manual"],
        "mappings": {"Off": "off", "Ready": "ready", "Start up": "start_up", "Heating": "heating", "Hot water": "hot_water", "El heating": "el_heating", "Defrost": "defrost", "Drip delay": "drip_delay", "Total stop": "total_stop", "Pump exercise": "pump_exercise", "Forced running": "forced_running", "Manual": "manual"},
    },
    "solar_panel_state": {
        "name": "Solar Panel State",
        "label": "Solar panel state",
        "page": "solar",
        "category": "Settings",
        "group": "Solar panel",
        "options": ["Off", "Running", "Forced Stop"],
        "mappings": {"Off": "off", "Running": "running", "Forced Stop": "forced_stop"},
    },
    "season_mode": {
        "name": "Season Mode",
        "label": "Season mode",
        "page": "user",
        "category": "Operation",
        "group": "User",
        "options": ["Summer", "Winter", "Auto"],
        "mappings": {"Summer": "summer", "Winter": "winter", "Auto": "auto"},
        "writable": True,
    },
}

# Moved from const.py - Number entity definitions (writable)
NUMBER_ENTITIES_LEGACY = {
    "hot_water_setpoint": {
        "name": "Hot Water Set Point",
        "label": "Hot water set point",
        "page": "user",
        "category": "Operation",
        "group": "User",
        "min_value": 40,
        "max_value": 65,
        "step": 1,
        "unit": "°C",
        "device_class": "temperature",
    },
    "room_setpoint": {
        "name": "Room Set Point",
        "label": "Room set point",
        "page": "user",
        "category": "Operation",
        "group": "User",
        "min_value": 10,
        "max_value": 30,
        "step": 1,
        "unit": "°C",
        "device_class": "temperature",
    },
}

# Moved from const.py - ID_MAP
ID_MAP = {
    # Temperature sensors
    253: (
        "display_input_theatsupply",
        "°C",
        "temperature",
        "measurement",
        "Input.THeatSupply",
    ),
    254: (
        "display_input_theatreturn",
        "°C",
        "temperature",
        "measurement",
        "Input.THeatReturn",
    ),
    255: ("display_input_twatertank", "°C", "temperature", "measurement", "Input.TWaterTank"),
    256: ("display_input_tamb", "°C", "temperature", "measurement", "Input.Tamb"),
    257: ("display_input_troom", "°C", "temperature", "measurement", "Input.Troom"),
    259: ("display_input_theattank", "°C", "temperature", "measurement", "Input.THeatTank"),
    260: ("display_input_tcoldsupply", "°C", "temperature", "measurement", "Input.TColdSupply"),
    261: ("display_input_tcoldreturn", "°C", "temperature", "measurement", "Input.TColdReturn"),
    262: ("display_input_tevap", "°C", "temperature", "measurement", "Input.Tevap"),
    263: ("display_input_tsolarwater", "°C", "temperature", "measurement", "Input.TSolarWater"),
    264: ("display_input_tsolarpanel", "°C", "temperature", "measurement", "Input.TSolarPanel"),
    # Temperature setpoints and limits
    193: ("user_heatspctrl_troomset", "°C", "temperature", "measurement", "HeatSPCtrl.TroomSet"),
    383: (
        "user_hotwater_setpoint",
        "°C",
        "temperature",
        "measurement",
        "HotWater.SetPoint",
    ),
    386: (
        "display_hotwater_setpointact",
        "°C",
        "temperature",
        "measurement",
        "HotWater.SetPointAct",
    ),
    382: (
        "hotwater_hotwater_teleclimit",
        "°C",
        "temperature",
        "measurement",
        "HotWater.TElecLimit",
    ),
    384: (
        "hotwater_hotwater_neutralzone",
        "°C",
        "temperature",
        "measurement",
        "HotWater.NeutralZone",
    ),
    385: ("hotwater_hotwater_capacity", "%", None, "measurement", "HotWater.Capacity"),
    410: (
        "heating_heating_setpointmin",
        "°C",
        "temperature",
        "measurement",
        "Heating.SetPointMin",
    ),
    411: (
        "heating_heating_setpointmax",
        "°C",
        "temperature",
        "measurement",
        "Heating.SetPointMax",
    ),
    409: (
        "heating_heating_setpmincool",
        "°C",
        "temperature",
        "measurement",
        "Heating.SetPMinCool",
    ),
    420: (
        "display_heating_setpointact",
        "°C",
        "temperature",
        "measurement",
        "Heating.SetPointAct",
    ),
    419: (
        "heating_heating_neutralzone",
        "°C",
        "temperature",
        "measurement",
        "Heating.NeutralZone",
    ),
    196: ("user_heatspctrl_toffset", "°C", "temperature", "measurement", "HeatSPCtrl.ToffSet"),
    352: (
        "solar_solarpanel_tstartdiff",
        "°C",
        "temperature",
        "measurement",
        "SolarPanel.TStartDiff",
    ),
    353: (
        "solar_solarpanel_tstopdiff",
        "°C",
        "temperature",
        "measurement",
        "SolarPanel.TStopDiff",
    ),
    354: ("solar_solarpanel_tempmax", "°C", "temperature", "measurement", "SolarPanel.TempMax"),
    356: (
        "solar_solarpanel_watermt",
        "°C",
        "temperature",
        "measurement",
        "SolarPanel.WaterMT",
    ),
    361: (
        "solar_solarpanel_starttemp",
        "°C",
        "temperature",
        "measurement",
        "SolarPanel.StartTemp",
    ),
    # Defrost temperature settings
    513: (
        "defrost_defrost_tfrosting",
        "°C",
        "temperature",
        "measurement",
        "Defrost.TFrosting",
    ),
    516: (
        "defrost_defrost_trelfrost",
        "°C",
        "temperature",
        "measurement",
        "Defrost.TRelFrost",
    ),
    514: (
        "defrost_defrost_ticemelt",
        "°C",
        "temperature",
        "measurement",
        "Defrost.TIceMelt",
    ),
    515: (
        "defrost_defrost_tmeltfast",
        "°C",
        "temperature",
        "measurement",
        "Defrost.TMeltFast",
    ),
    510: (
        "defrost_defrost_fftambmin",
        "°C",
        "temperature",
        "measurement",
        "Defrost.FFTambMin",
    ),
    511: (
        "defrost_defrost_fftambmax",
        "°C",
        "temperature",
        "measurement",
        "Defrost.FFTambMax",
    ),
    512: (
        "defrost_defrost_fftevapstop",
        "°C",
        "temperature",
        "measurement",
        "Defrost.FFTevapStop",
    ),
    518: (
        "defrost_defrost_tairdfrtemp",
        "°C",
        "temperature",
        "measurement",
        "Defrost.TAirDfrTemp",
    ),
    524: ("defrost_defrost_stoptemp", "°C", "temperature", "measurement", "Defrost.StopTemp"),
    # Capacity and performance metrics
    299: ("display_heatpump_capacityact", "%", None, "measurement", "HeatPump.CapacityAct"),
    300: ("display_heatpump_capacityreq", "%", None, "measurement", "HeatPump.CapacityReq"),
    433: ("display_compressor_output", None, None, "measurement", "Compressor.Output"),
    405: ("heating_heating_stopcap1", "%", None, "measurement", "Heating.StopCap1"),
    406: ("heating_heating_stopcap2", "%", None, "measurement", "Heating.StopCap2"),
    407: (
        "heating_heating_startdifcap",
        "%",
        None,
        "measurement",
        "Heating.StartDifCap",
    ),
    529: ("defrost_defrost_defrostcap", "%", None, "measurement", "Defrost.DefrostCap"),
    # Compressor parameters
    435: ("heating_compressor_gain", None, None, "measurement", "Compressor.Gain"),
    436: ("heating_compressor_tn", None, None, "measurement", "Compressor.Tn"),
    430: ("heating_compressor_minvoltage", "V", None, "measurement", "Compressor.MinVoltage"),
    429: ("heating_compressor_maxvoltage", "V", None, "measurement", "Compressor.MaxVoltage"),
    428: ("heating_compressor_ustart", "V", None, "measurement", "Compressor.UStart"),
    427: ("heatpump_compressor_mincprstop", None, None, "measurement", "Compressor.MinCprStop"),
    447: (
        "service_compressor_compruntime",
        "h",
        None,
        "total_increasing",
        "Compressor.CompRunTime",
    ),
    # Runtime counters (diagnostic)
    301: ("service_heatpump_runtime", "h", None, "total_increasing", "HeatPump.RunTime"),
    302: ("service_heatpump_apruntime", "h", None, "total_increasing", "HeatPump.APRunTime"),
    303: ("service_heatpump_hspruntime", "h", None, "total_increasing", "HeatPump.HSPRunTime"),
    376: ("service_coldpump_cpruntime", "h", None, "total_increasing", "ColdPump.CPRunTime"),
    387: ("service_hotwater_runtime", "h", None, "total_increasing", "HotWater.RunTime"),
    423: (
        "service_heating_elecruntime",
        "h",
        None,
        "total_increasing",
        "Heating.ElecRunTime",
    ),
    362: ("service_solarpanel_runtime", "h", None, "total_increasing", "SolarPanel.RunTime"),
    # System states and modes
    297: ("display_heatpump_state", None, None, None, "HeatPump.State"),
    296: ("display_heatpump_seasonstate", None, None, None, "HeatPump.SeasonState"),
    364: ("display_solarpanel_state", None, None, None, "SolarPanel.State"),
    374: ("display_coldpump_state", None, None, None, "ColdPump.State"),
    503: ("display_legionella_state", None, None, None, "Legionella.State"),
    278: ("user_parameters_seasonmode", None, None, None, "Parameters.SeasonMode"),
    404: ("heatpump_heating_ctrlmode", None, None, None, "Heating.CtrlMode"),
    453: ("heatpump_cprcontrol_cprmode", None, None, None, "CprControl.CprMode"),
    367: ("heatpump_coldpump_mode", None, None, None, "ColdPump.Mode"),
    509: ("defrost_defrost_mode", None, None, None, "Defrost.Mode"),
    390: ("service_concrete_mode", None, None, None, "Concrete.Mode"),
    # Binary outputs and switches
    219: ("display_output_heater", None, None, None, "Output.Heater"),
    220: ("display_output_hottapwater", None, None, None, "Output.HotTapWater"),
    221: ("display_output_coldpump", None, None, None, "Output.ColdPump"),
    222: ("display_output_coldpumplow", None, None, None, "Output.ColdPumpLow"),
    223: ("display_output_hotsidepump", None, None, None, "Output.HotSidePump"),
    224: ("display_output_defrostvalve", None, None, None, "Output.DefrostValve"),
    225: ("display_output_solarpump", None, None, None, "Output.SolarPump"),
    227: ("display_output_auxpump", None, None, None, "Output.AuxPump"),
    228: ("display_output_alarm", None, None, None, "Output.Alarm"),
    232: ("display_output_coldpumpvolt", None, None, None, "Output.ColdPumpVolt"),
    265: ("display_input_hpswitch", None, None, None, "Input.HPSwitch"),
    266: ("display_input_lpswitch", None, None, None, "Input.LPSwitch"),
    267: ("display_input_bpswitch", None, None, None, "Input.BPSwitch"),
    268: ("display_input_dfstart", None, None, None, "Input.DFStart"),
    269: ("display_input_fcswitch", None, None, None, "Input.FCSwitch"),
    # Cold pump parameters
    368: ("heatpump_coldpump_stopdelay", None, None, None, "ColdPump.StopDelay"),
    369: (
        "heatpump_coldpump_hspeedcap",
        "%",
        None,
        "measurement",
        "ColdPump.HSpeedCap",
    ),
    370: (
        "heatpump_coldpump_hspeednz",
        "%",
        None,
        "measurement",
        "ColdPump.HSpeedNZ",
    ),
    371: (
        "heatpump_coldpump_hspeedvolt",
        "V",
        None,
        "measurement",
        "ColdPump.HSpeedVolt",
    ),
    372: (
        "heatpump_coldpump_lspeedvolt",
        "V",
        None,
        "measurement",
        "ColdPump.LSpeedVolt",
    ),
    # Heating curve parameters
    184: ("heating_heatspctrl_type", None, None, None, "HeatSPCtrl.Type"),
    192: ("heating_heatspctrl_curve", None, None, None, "HeatSPCtrl.Curve"),
    185: (
        "heating_heatspctrl_curpnt1",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.CurPnt1",
    ),
    186: (
        "heating_heatspctrl_curpnt2",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.CurPnt2",
    ),
    187: (
        "heating_heatspctrl_curpnt3",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.CurPnt3",
    ),
    188: (
        "heating_heatspctrl_curpnt4",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.CurPnt4",
    ),
    189: (
        "heating_heatspctrl_curpnt5",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.CurPnt5",
    ),
    190: (
        "heating_heatspctrl_curpnt6",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.CurPnt6",
    ),
    191: (
        "heating_heatspctrl_curpnt7",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.CurPnt7",
    ),
    197: (
        "heating_heatspctrl_ambcmpmax",
        "°C",
        "temperature",
        "measurement",
        "HeatSPCtrl.AmbCmpMax",
    ),
    # System parameters
    284: ("heatpump_parameters_hpstops", None, None, None, "Parameters.HPStopS"),
    285: ("heatpump_parameters_totalstops", None, None, None, "Parameters.TotalStopS"),
    281: (
        "heatpump_parameters_hpstopt",
        "°C",
        "temperature",
        "measurement",
        "Parameters.HPStopT",
    ),
    283: (
        "heatpump_parameters_totalstopt",
        "°C",
        "temperature",
        "measurement",
        "Parameters.TotalStopT",
    ),
    282: (
        "heatpump_parameters_hpambstopt",
        "°C",
        "temperature",
        "measurement",
        "Parameters.HPAmbStopT",
    ),
    286: ("heatpump_parameters_pumpexinter", None, None, None, "Parameters.PumpExInter"),
    280: ("heatpump_parameters_startuptime", None, None, None, "Parameters.StartUpTime"),
    408: ("heatpump_heating_elecdelay", None, None, None, "Heating.ElecDelay"),
    413: (
        "heating_heating_tevapmin",
        "°C",
        "temperature",
        "measurement",
        "Heating.TEvapMin",
    ),
    421: ("heating_heating_minheattime", None, None, None, "Heating.MinHeatTime"),
    # Defrost parameters
    517: ("defrost_defrost_relfrostcmp", None, None, None, "Defrost.RelFrostCmp"),
    520: ("defrost_defrost_defrtimein", None, None, None, "Defrost.DefrTimeIn"),
    522: ("defrost_defrost_mininterval", None, None, None, "Defrost.MinInterval"),
    521: ("defrost_defrost_maxtime", None, None, None, "Defrost.MaxTime"),
    523: ("defrost_defrost_dripdowndel1", None, None, None, "Defrost.DripDownDel1"),
    # Legionella parameters
    500: ("hotwater_legionella_waittime", None, None, None, "Legionella.WaitTime"),
    501: (
        "hotwater_legionella_treattemp",
        "°C",
        "temperature",
        "measurement",
        "Legionella.TreatTemp",
    ),
    504: ("hotwater_legionella_timeout1", None, None, None, "Legionella.Timeout1"),
    # Solar panel parameters
    351: ("solar_solarpanel_sensorselect", None, None, None, "SolarPanel.SensorSelect"),
    # Manual controls (service)
    235: ("service_manual_compressor1", None, None, None, "Manual.Compressor1"),
    236: ("service_manual_heater", None, None, None, "Manual.Heater"),
    237: ("service_manual_hottapwater", None, None, None, "Manual.HotTapWater"),
    238: ("service_manual_coldpump", None, None, None, "Manual.ColdPump"),
    239: ("service_manual_coldpumplow", None, None, None, "Manual.ColdPumpLow"),
    240: ("service_manual_hotsidepump", None, None, None, "Manual.HotSidePump"),
    241: ("service_manual_defrostvalve", None, None, None, "Manual.DefrostValve"),
    242: ("service_manual_solarpump", None, None, None, "Manual.SolarPump"),
    243: ("service_manual_re6", None, None, None, "Manual.RE6"),
    244: ("service_manual_auxpump", None, None, None, "Manual.AuxPump"),
    245: ("service_manual_alarm", None, None, None, "Manual.Alarm"),
    250: ("service_manual_coldpumpvolt", None, None, None, "Manual.ColdPumpVolt"),
    # Service counters
    525: (
        "service_defrost_defrhgcount",
        None,
        None,
        "total_increasing",
        "Defrost.DefrHGCount",
    ),
    526: ("service_defrost_defraircnt", None, None, "total_increasing", "Defrost.DefrAirCnt"),
    # System information (diagnostic)
    37: ("service_info_appversion", None, None, None, "Info.AppVersion"),
    53: ("service_com_ipadr", None, None, None, "Com.IpAdr"),
    52: ("service_com_macadr", None, None, None, "Com.MacAdr"),
    555: ("service_misc_lup200swver", None, None, None, "Misc.LUP200SWVer"),
    # Configuration parameters
    137: ("user_user_language", None, None, None, "User.Language"),
    291: ("service_parameters_displaymode", None, None, None, "Parameters.DisplayMode"),
    277: ("service_parameters_mainswitch", None, None, None, "Parameters.MainSwitch"),
    # Time settings
    113: ("user_time_year", None, None, None, "Time.Year"),
    112: ("user_time_month", None, None, None, "Time.Month"),
    110: ("user_time_day", None, None, None, "Time.Day"),
    109: ("user_time_hour", None, None, None, "Time.Hour"),
    108: ("user_time_minute", None, None, None, "Time.Minute"),
    # Missing entity mappings from catalog.py
    420: ("heating_heating_setpointact", "°C", "temperature", "measurement", "Heating.SetPointAct"),
    434: ("heating_heatspctrl_toffset", None, None, None, "HeatSPCtrl.ToffSet"),
    383: ("hotwater_hotwater_setpoint", "°C", "temperature", "measurement", "HotWater.SetPoint"),
    1641: ("system_firmwareupgrade_datafile", None, None, None, "Datafile"),
    1608: ("system_firmwareupgrade_lmc300", None, None, None, "LMC300"),
    1607: ("system_firmwareupgrade_lom320", None, None, None, "LOM320"),
    1625: ("system_firmwareupgrade_lup200", None, None, None, "LUP200"),
    1617: ("system_firmwareupgrade_project_name", None, None, None, "Project name"),
    1600: ("system_firmwareupgrade_userinterface", None, None, None, "UserInterface"),
    1660: ("system_groups_admin", None, None, None, "admin"),
    1661: ("system_groups_ha_user", None, None, None, "ha-user"),
    1642: ("system_groups_name", None, None, None, "Name"),
    1670: ("system_systemview", "°C", "temperature", "measurement", "System View"),
    # Additional missing entity mappings from catalog.py
    # Using available IDs from DEFAULT_IDS that aren't already mapped
    530: ("display_heating_setpointact", "°C", "temperature", "measurement", "Heating.SetPointAct"),
    531: ("display_heating_source", None, None, None, "Heating.Source"),
    532: ("display_hotwater_source", None, None, None, "HotWater.Source"),
    403: ("heating_heating_source", None, None, None, "Heating.Source"),
    533: ("heating_heating_source", None, None, None, "Heating.Source"),
    380: ("hotwater_hotwater_source", None, None, None, "HotWater.Source"),
    534: ("hotwater_hotwater_source", None, None, None, "HotWater.Source"),
    535: ("solar_solarpanel_state", None, None, None, "SolarPanel.State"),
    536: ("user_hotwater_setpoint", "°C", "temperature", "measurement", "HotWater.SetPoint"),
}

# Moved from const.py - DEFAULT_IDS
DEFAULT_IDS = "37;52;53;108;109;110;112;113;137;184;185;186;187;188;189;190;191;192;193;196;197;219;220;221;222;223;224;225;227;228;232;235;236;237;238;239;240;241;242;243;244;245;250;253;254;255;256;257;259;260;261;262;263;264;265;266;267;268;269;277;278;280;281;282;283;284;285;286;291;296;297;299;300;301;302;303;351;352;353;354;356;361;362;364;367;368;369;370;371;372;374;376;380;382;383;384;385;386;387;390;403;404;405;406;407;408;409;410;411;413;419;420;421;423;427;428;429;430;433;435;436;447;453;500;501;503;504;509;510;511;512;513;514;515;516;517;518;520;521;522;523;524;525;526;529;555"

# Moved from const.py - DEFAULT_ENABLED_ENTITIES
DEFAULT_ENABLED_ENTITIES = [
    # Operation/Display: Essential temperature sensors and heat pump state
    253,  # heating_supply_temp
    255,  # water_tank_temp
    257,  # room_temp
    297,  # heatpump_state
    # Operation/User: Key user-configurable parameters
    193,  # room_setpoint
    383,  # hot_water_setpoint
    278,  # season_mode
    137,  # user_language
    # Settings/Heatpump: Critical heat pump settings
    299,  # capacity_actual
    447,  # compressor_runtime
    433,  # compressor_output
    # Settings/Heating: Essential heating parameters
    420,  # heating_setpoint_actual
    403,  # heating_source
    404,  # heating_control_mode
    # Settings/Hot water: Key hot water settings
    380,  # hot_water_source
    386,  # hot_water_setpoint_actual
    220,  # hot_tap_water_output
    # Settings/Solar panel: Basic solar panel status
    364,  # solar_panel_state
    263,  # solar_water_temp
    # Settings/Service: Essential diagnostic entities
    228,  # alarm_output
    301,  # heatpump_runtime
    # Settings/Defrost: Critical defrost parameters
    509,  # defrost_mode
    517,  # defrost_relative_frost_compressor
    # Settings/Extended Display: Key extended display entities
    296,  # heatpump_season_state
    300,  # capacity_requested
]

# Moved from const.py - BINARY_OUTPUT_IDS
BINARY_OUTPUT_IDS = {
    219: "Heater",
    220: "Hot Tap Water",
    221: "Cold Pump",
    222: "Cold Pump Low",
    223: "Hot Side Pump",
    224: "Defrost Valve",
    225: "Solar Pump",
    227: "Aux Pump",
    228: "Alarm",
    232: "Cold Pump Volt",
    265: "HP Switch",
    266: "LP Switch",
    267: "BP Switch",
    268: "DF Start",
    269: "FC Switch",
}

# Helper functions moved from const.py
def get_entity_info(entity_id: int):
    """Get entity information from ID_MAP.

    Args:
        entity_id (int): The entity ID to look up

    Returns:
        tuple: (entity_key, unit, device_class, state_class, original_name) or None if not found
    """
    return ID_MAP.get(entity_id)


def is_binary_output(entity_id):
    """Check if an ID is a binary output (should be exposed as binary_sensor).

    Args:
        entity_id (int): The entity ID to check

    Returns:
        bool: True if ID is a binary output, False otherwise
    """
    return entity_id in BINARY_OUTPUT_IDS


def get_original_name(entity_id: int):
    """Get original name for an entity ID for diagnostics.

    Args:
        entity_id (int): The entity ID to look up

    Returns:
        str: The original name or None if not found
    """
    entity_info = ID_MAP.get(entity_id)
    if entity_info and len(entity_info) >= 5:
        return entity_info[4]
    return None


def get_binary_output_name(entity_id: int):
    """Get display name for a binary output ID.

    Args:
        entity_id (int): The binary output ID to look up

    Returns:
        str: The display name or None if not found
    """
    return BINARY_OUTPUT_IDS.get(entity_id)


def get_entity_group_info(entity_id: int):
    """Get HTML group information for an entity.

    Args:
        entity_id (int): The entity ID to look up

    Returns:
        dict: Dictionary with category and group information, or None if not found
    """
    entity_info = ID_MAP.get(entity_id)
    if not entity_info or len(entity_info) < 5:
        return None

    # Get entity key from ID_MAP
    entity_key = entity_info[0]

    # Check in all entity definition dictionaries
    for entity_dict in [
        TEMP_SENSORS,
        SETPOINT_SENSORS,
        PERFORMANCE_SENSORS,
        COUNTER_SENSORS,
        SYSTEM_SENSORS,
        SYSTEM_COUNTER_SENSORS,
        BINARY_SENSORS,
        SELECT_ENTITIES_LEGACY,
        NUMBER_ENTITIES_LEGACY,
    ]:
        if entity_key in entity_dict:
            entity_def = entity_dict[entity_key]
            return {
                "category": entity_def.get("category"),
                "group": entity_def.get("group"),
            }

    return None


def get_entity_ids_by_group(category, group):
    """Get all entity IDs that belong to a specific category and group.

    Args:
        category (str): The category (Operation, Settings, Configuration)
        group (str): The group within category

    Returns:
        list[int]: List of entity IDs that belong to specified group
    """
    result = []

    for entity_id, entity_info in ID_MAP.items():
        if len(entity_info) >= 5:
            entity_key = entity_info[0]
            group_info = get_entity_group_info(entity_id)

            if (
                group_info
                and group_info.get("category") == category
                and group_info.get("group") == group
            ):
                result.append(entity_id)

    return result


def get_all_entities() -> dict[str, dict[str, Any]]:
    """Return all entity definitions."""
    return ENTITIES


def get_entities_by_platform(platform: str) -> list[str]:
    """Return entity keys for a specific platform."""
    return [
        key for key, entity in ENTITIES.items() if entity.get("platform") == platform
    ]


def get_entities_by_category(category: str) -> list[str]:
    """Return entity keys for a specific category."""
    return [
        key for key, entity in ENTITIES.items() if entity.get("category") == category
    ]


def get_entities_by_group(category: str, group: str) -> list[str]:
    """Return entity keys for a specific category and group."""
    return [
        key
        for key, entity in ENTITIES.items()
        if entity.get("category") == category and entity.get("group") == group
    ]


def get_entity_by_id(entity_id: int):
    """Get entity definition by ID.

    Args:
        entity_id (int): The entity ID to look up

    Returns:
        dict: Entity definition or None if not found
    """
    entity_info = ID_MAP.get(entity_id)
    if not entity_info or len(entity_info) < 1:
        return None

    entity_key = entity_info[0]
    return ENTITIES.get(entity_key)
